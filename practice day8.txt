CREATE TABLE students(
     std INT,
     rollno INT,
     name CHAR(10),
     PRIMARY KEY(std, rollno));


CREATE TABLE marks(
     subject CHAR(15),
     marks DECIMAL(5,2),
     std INT,
     rollno INT,
     Foreign Key (std, rollno) REFERENCES students(std, rollno)
);


INSERT INTO students VALUES(1,1,"abc");
INSERT INTO students VALUES(1,2,"lmn");
INSERT INTO students VALUES(2,1,"pqr");


INSERT INTO students VALUES("Maths",70,1,1);
INSERT INTO students VALUES("Maths",60,1,2);
INSERT INTO students VALUES("Maths",40,2,1);



INSERT INTO students VALUES("History",70,1,1);
INSERT INTO students VALUES("History",60,1,2);
INSERT INTO students VALUES("History",40,2,1);



SELECT s.std,s.rollno,s.sname,m.marks FROM students s INNER JOIN marks m ON s.rollno = m.rollno;

SELECT s.std,s.rollno,s.name,m.marks FROM students s INNER JOIN marks m ON s.rollno = m.rollno AND s.std = m.std WHERE m.std = 1;



--------------------------------------------------------------------------------------



## Trigger 

CREATE TABLE account(accno INT, acc_type CHAR(10), balance DECIMAL(10,2));

CREATE TABLE transactionS (tid INT PRIMARY KEY AUTO_INCREMENT, tx_type CHAR(10), amount DECIMAL(10,2), accno INT);

INSERT INTO accounts VALUES(1, "SAVINGS",100000);
INSERT INTO accounts VALUES(2, "SAVINGS",100000);
INSERT INTO accounts VALUES(3, "CURRENT",100000);
INSERT INTO accounts VALUES(4, "SAVINGS",100000);



INSERT INTO transactions(tx_type, amount, accno) VALUES("credit", 1000,1);
INSERT INTO transactions(tx_type, amount, accno) VALUES("credit", 2000,2);
INSERT INTO transactions(tx_type, amount, accno) VALUES("credit", 3000,3);
INSERT INTO transactions(tx_type, amount, accno) VALUES("credit", 4000,4);























































--------------------------------------------------------------------------------------------------------------------------------

## CHECK

CREATE TABLE employees(
     empid INT PRIMARY KEY,
     ename CHAR(10) CHECK (LENGTH(ename) >1),
     age INT CHECK (age>18),
     sal DECIMAL(10,2) check (sal>1000)
);


DESC employee;

INSERT INTO employees VALUES(1,"a",16,800);


INSERT INTO employees VALUES(1,"rohan",16,800);


INSERT INTO employees VALUES(1,"rohan",20,800);


INSERT INTO employees VALUES(1,"rohan",20,1800);

--------------------------------------------------------------------------------

## Constraint


----------------------------------------------------------------------


## Alter

CREATE TABLE mobiles(
      mid INT PRIMARY KEY AUTO_INCREMENT,
      name VARCHAR(20),
      price DECIMAL (10,2)
);


INSERT INTO mobiles(name, price) VALUES("Ximomi",10000);                  
INSERT INTO mobiles(name, price) VALUES("Samsung",20000);

SELECT * FROM mobiles;


ALTER TABLE mobiles ADD COLUMN description CHAR(20);

UPDATE mobiles SET description = "Best" WHERE mid = 1;
UPDATE mobiles SET description = "Better" WHERE mid = 2;
UPDATE mobiles SET description = "Good" WHERE mid = 100;


ALTER TABLE mobiles MODIFY COLUMN description VARCHAR(20);


ALTER TABLE mobiles CHANGE COLUMN description desci VARCHAR(20);


ALTER TABLE mobiles DROP COLUMN desci;


ALTER TABLE mobiles ADD CONSTRAINT UNIQUE(name);


SHOW CREATE TABLE mobiles;

ALTER TABLE mobiles DROP PROMARY KEY;
ALTER TABLE mobiles DROP CONSTRAINT name;


DELIMITER $$